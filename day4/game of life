int countLiveNeighbors(int** board, int rows, int cols, int r, int c) {
    int liveNeighbors = 0;
    int directions[8][2] = {{-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 1}, {1, -1}, {1, 0}, {1, 1}};
    for (int i = 0; i < 8; ++i) {
        int nr = r + directions[i][0];
        int nc = c + directions[i][1];
        if (nr >= 0 && nr < rows && nc >= 0 && nc < cols && (board[nr][nc] == 1 || board[nr][nc] == 2)) {
            liveNeighbors++;
        }
    }
    return liveNeighbors;
}

void gameOfLife(int** board, int boardSize, int* boardColSize) {
    int rows = boardSize;
    int cols = *boardColSize;
    
   
    for (int r = 0; r < rows; ++r) {
        for (int c = 0; c < cols; ++c) {
            int liveNeighbors = countLiveNeighbors(board, rows, cols, r, c);
            if (board[r][c] == 1) {
                if (liveNeighbors < 2 || liveNeighbors > 3) {
                    board[r][c] = 2; 
                }
            } else {
                if (liveNeighbors == 3) {
                    board[r][c] = -1; 
                }
            }
        }
    }
    
    for (int r = 0; r < rows; ++r) {
        for (int c = 0; c < cols; ++c) {
            if (board[r][c] == 2) {
                board[r][c] = 0;
            } else if (board[r][c] == -1) {
                board[r][c] = 1;
            }
        }
    }
}
