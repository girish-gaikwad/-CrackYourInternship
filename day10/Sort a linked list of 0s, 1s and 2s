#include <stdio.h>
#include <stdlib.h>

/* Link list node */
struct Node {
    int data;
    struct Node* next;
};

// Function to sort a linked list of 0s, 1s, and 2s
void sortList(struct Node *head) {
    int count[3] = {0, 0, 0}; // Initialize count of '0', '1' and '2' as 0
    struct Node *ptr = head;

    // Count the occurrences of 0s, 1s, and 2s
    while (ptr != NULL) {
        count[ptr->data]++;
        ptr = ptr->next;
    }

    int i = 0;
    ptr = head;

    // Update the list with sorted values based on counts
    while (ptr != NULL) {
        if (count[i] == 0) {
            i++;
        } else {
            ptr->data = i;
            count[i]--;
            ptr = ptr->next;
        }
    }
}

// Function to push a node at the beginning of the list
void push(struct Node** head_ref, int new_data) {
    struct Node* new_node = (struct Node*)malloc(sizeof(struct Node));
    new_node->data = new_data;
    new_node->next = (*head_ref);
    (*head_ref) = new_node;
}

// Function to print the linked list
void printList(struct Node *node) {
    while (node != NULL) {
        printf("%d ", node->data);
        node = node->next;
    }
    printf("\n");
}

// Driver program to test above function
int main(void) {
    struct Node *head = NULL;

    // Create a linked list with values 0s, 1s, and 2s
    push(&head, 0);
    push(&head, 1);
    push(&head, 0);
    push(&head, 2);
    push(&head, 1);
    push(&head, 1);
    push(&head, 2);
    push(&head, 1);
    push(&head, 2);

    printf("Linked List before Sorting:\n");
    printList(head);

    sortList(head);

    printf("Linked List after Sorting:\n");
    printList(head);

    return 0;
}
