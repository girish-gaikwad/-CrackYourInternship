#include <stdio.h>
#include <stdlib.h>

void constructProductArray(int nums[], int n, int product[]) {
    // Base cases
    if (n == 1) {
        product[0] = 0;
        return;
    }

    int* left = (int*)malloc(n * sizeof(int));
    int* right = (int*)malloc(n * sizeof(int));

    left[0] = 1;

    right[n - 1] = 1;

    for (int i = 1; i < n; i++) {
        left[i] = nums[i - 1] * left[i - 1];
    }

    for (int j = n - 2; j >= 0; j--) {
        right[j] = nums[j + 1] * right[j + 1];
    }

    for (int i = 0; i < n; i++) {
        product[i] = left[i] * right[i];
    }

    free(left);
    free(right);
}

int main() {
    int n;
    printf("Enter the size of the array: ");
    scanf("%d", &n);
    
    int* nums = (int*)malloc(n * sizeof(int));
    printf("Enter the elements of the array: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &nums[i]);
    }

    int* product = (int*)malloc(n * sizeof(int));

    constructProductArray(nums, n, product);

    printf("Product array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", product[i]);
    }
    printf("\n");

    free(nums);
    free(product);

    return 0;
}
