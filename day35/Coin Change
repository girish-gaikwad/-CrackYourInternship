int CalculateCoinChange(const std::vector<int>& coins, int remainingAmount, std::vector<int>& memo) {
   
    if (remainingAmount < 0) {
        return -1; 
    }
    if (remainingAmount == 0) {
        return 0;  
    }
    if (memo[remainingAmount - 1] != 0) {
        return memo[remainingAmount - 1]; 
    }
    
    int minCoins = INT_MAX;
    for (int coin : coins) {
        int result = CalculateCoinChange(coins, remainingAmount - coin, memo);
        if (result >= 0 && result < minCoins) {
            minCoins = 1 + result;  
        }
    }
    memo[remainingAmount - 1] = (minCoins != INT_MAX) ? minCoins : -1;  
    return memo[remainingAmount - 1];
}

class Solution {
public:
    int coinChange(const std::vector<int>& coins, int amount) {
        if (amount < 1) {
            return 0;  
        std::vector<int> memo(amount, 0);  
        return CalculateCoinChange(coins, amount, memo);
    }
};
